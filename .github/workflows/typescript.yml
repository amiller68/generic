name: TypeScript CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ts/**'
      - '.github/workflows/typescript.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'ts/**'
      - '.github/workflows/typescript.yml'

defaults:
  run:
    working-directory: ts

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.15.9
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: ts/pnpm-lock.yaml
    
    - name: Install dependencies
      run: make install
    
    - name: Check formatting
      run: make fmt-check
    
    - name: Type check
      run: make types
    
    - name: Run tests
      run: make test
    
    - name: Build projects
      run: make build

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        app: [api, web]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build ${{ matrix.app }} Docker image
      working-directory: ts
      run: |
        ./bin/docker build ${{ matrix.app }}
    
    - name: Run ${{ matrix.app }} smoke test
      working-directory: ts
      run: |
        if [ "${{ matrix.app }}" = "api" ]; then
          docker run -d -p 3000:3000 --name ts-${{ matrix.app }}-test ts-${{ matrix.app }}
          sleep 5
          curl -f http://localhost:3000/health || exit 1
        elif [ "${{ matrix.app }}" = "web" ]; then
          docker run -d -p 80:80 --name ts-${{ matrix.app }}-test ts-${{ matrix.app }}
          sleep 5
          curl -f http://localhost:80 || exit 1
        fi
        docker stop ts-${{ matrix.app }}-test
        docker rm ts-${{ matrix.app }}-test