name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup environments
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "py/uv.lock"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.15.9
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'pnpm'
        cache-dependency-path: ts/pnpm-lock.yaml
    
    - name: Install all dependencies
      run: make install
    
    # Run all checks
    - name: Run all checks
      run: make check
    
    # Build all projects
    - name: Build all projects
      run: make build
    
    # Docker setup
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # Extract version
    - name: Extract version
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    # Build and push Python image
    - name: Build and push Python Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./py
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/py-app:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/py-app:latest
          ghcr.io/${{ github.repository_owner }}/py-app:${{ steps.version.outputs.VERSION }}
          ghcr.io/${{ github.repository_owner }}/py-app:latest
    
    # Build and push TypeScript API image
    - name: Build and push TypeScript API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./ts
        file: ./ts/apps/api/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ts-api:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/ts-api:latest
          ghcr.io/${{ github.repository_owner }}/ts-api:${{ steps.version.outputs.VERSION }}
          ghcr.io/${{ github.repository_owner }}/ts-api:latest
    
    # Build and push TypeScript Web image
    - name: Build and push TypeScript Web Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./ts
        file: ./ts/apps/web/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ts-web:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/ts-web:latest
          ghcr.io/${{ github.repository_owner }}/ts-web:${{ steps.version.outputs.VERSION }}
          ghcr.io/${{ github.repository_owner }}/ts-web:latest